---
description:
globs:
alwaysApply: true
---
# 제품 요구사항 문서 (PRD)

## 1. 요약
본 서비스는 사용자가 실시간으로 픽셀을 배치해 거대한 디지털 캔버스를 공동 제작하는 웹 기반 협업 아트 프로젝트다. r/place와 유사하나 한국어 UX, 유연한 쿨다운, 커뮤니티 기능 등 차별화를 통해 창작·소통·게임성을 동시에 제공한다.

## 2. 문제 정의
- 온라인 공동 창작 플랫폼 부족으로 이용자들은 대규모 협업 그림 경험을 얻기 어렵다.  
- 기존 서비스는 일회성 이벤트로 끝나 지속적 커뮤니티 및 데이터 보존 기능이 약하다.  
- 무분별한 픽셀 스팸, 악성 사용자, 성인/정치 콘텐츠 등 관리 문제 존재.

## 3. 목표 및 지표
- 1차 목표: 실시간 픽셀 공동 그림 플랫폼 MVP 출시  
- 부차 목표: 커뮤니티 확장, 타임랩스·모바일 최적화, 관리자 툴 제공  
- 성공 지표  
  - DAU 10,000명, 1인당 평균 픽셀 20개/일  
  - 쿨다운 위반율 < 2%  
  - 서버 응답 200ms 이하, 99.9% 가용성  
  - 초기 3개월 리텐션 25% 이상  

## 4. 타깃 사용자
### 주요 사용자
- 15~35세 디지털 네이티브, 커뮤니티 참여·밈 문화 선호  
- 웹툰·게임·서브컬처 팬덤, 실시간 상호작용 콘텐츠 소비자  
### 이해관계자
- 브랜드/커뮤니티 운영자(이벤트 협업)  
- 스트리머·인플루언서(콘텐츠 제작)  
- 운영팀, 마케터, 관리자  

## 5. 사용자 스토리
- “창작자로서 실시간으로 픽셀을 찍어 공동 아트를 완성하고 싶다.”  
- “관전자/시청자로서 다른 사람이 그리는 과정을 실시간으로 보고 싶다.”  
- “운영자로서 악성 사용자를 빠르게 제재하고 싶다.”  
- “모바일 사용자로서 화면을 확대·이동하며 편히 그리기를 원한다.”  
- “커뮤니티 리더로서 길드를 만들어 특정 로고를 그리기 원한다.”  

## 6. 기능 요구사항
### 핵심 기능
1. 픽셀 캔버스  
   - 고정 2000×2000 그리드(값 조정 가능).  
   - 수용량: 최대 4,000,000 픽셀.  
   - AC: 좌표·색상 DB 반영 즉시 모든 클라이언트에 전송됨.  
2. 픽셀 그리기/색 변경  
   - 팔레트 32색; 이후 확장 가능.  
   - AC: 클릭 시 서버에 POST /pixel; 성공 후 쿨다운 시작.  
3. 실시간 동기화  
   - WebSocket 채널 ‘/canvas’ 사용.  
   - AC: 1000명 동시 접속 시 지연 < 300ms.  
4. 쿨다운 시스템  
   - 기본 5초, 로그인 사용자는 3초(변경 가능).  
   - AC: 남은 시간 UI 표시, 남용 시 1분 페널티.  
5. 기본 UI  
   - React + Redux; 좌측 팔레트, 중앙 캔버스, 우측 타이머.  
   - 단축키(마우스 휠 확대, 스페이스 이동).  
6. 백엔드 API  
   - Spring Boot REST + WebSocket; Redis pub/sub.  
   - AC: 트랜잭션 처리 50ms 내.  
7. 영속성  
   - MySQL에 전체 캔버스 스냅샷 1분 주기 저장.  
   - Redis에 임시 캔버스 상태, TTL 24h.

### 부가 기능 (Nice-to-have)
- OAuth2 로그인, 프로필·픽셀 통계  
- 모바일 반응형 및 PWA  
- 영역 북마크, 미니맵  
- 타임랩스 자동 생성·다운로드  
- 채팅, 길드, 랭킹  
- 주기적 캔버스 리셋/아카이브  
- 관리자 대시보드(밴, 롤백, 백업)  
- 고급 쿨다운(IP, 계정 레벨, 머신러닝 패턴 탐지)

## 7. 비기능 요구사항
- 성능: TPS 10,000, 동시 5,000, 지연 200ms 이하  
- 보안: JWT, HTTPS, WAF, XSS/CSRF 차단  
- 사용성: 최초 러닝커브 3분 내, 접근성 KWCAG 2.1 AA  
- 확장성: 멀티캔버스 샤딩 구조, 오토스케일  
- 호환성: 최신 크롬·사파리·엣지·모바일 브라우저 지원  

## 8. 기술 고려사항
- 아키텍처: React SPA → Nginx → Spring Boot → Redis → MySQL(AWS RDS)  
- 인프라: AWS ECS/Fargate, S3 정적 콘텐츠, CloudFront CDN  
- 데이터: 픽셀 테이블(좌표, 색상, modified_at), 사용자·길드·로그 테이블  
- 외부 연동: OAuth(Google/Kakao), Sentry(모니터링), Slack 알림  
- 배포: GitHub Actions, Blue/Green  

## 9. 성과 지표
- 사용자: DAU/MAU, 신규 가입, 평균 세션 10분 이상  
- 비즈니스: 스폰서 이벤트당 노출 1M, 광고 CTR 2%  
- 기술: WebSocket 오류율 <0.1%, 빌드 실패율 <2%  

## 10. 일정
| 단계 | 기간 | 주요 산출물 |
| --- | --- | --- |
| 1. 기획·설계 | 2주 | PRD, 와이어프레임, ERD |
| 2. MVP 개발 | 6주 | 핵심 기능 1~7, 베타 배포 |
| 3. 베타 테스트 | 2주 | 부하·UX 개선, 버그 수정 |
| 4. 정식 출시 | 2주 | 마케팅, 운영 가이드 |
| 5. 확장 기능 | 8주 | 로그인, 모바일, 타임랩스, 채팅 |

## 11. 위험 및 대응
- 서버 부하 폭주 → 오토스케일, 캐시 분산  
- 악성 그림/정치 선동 → 키워드 필터, 관리자 실시간 모니터링  
- 봇 공격 → reCAPTCHA, 속도제한, IP 블록  
- 저조한 참여 → 인플루언서 협업, 이벤트 보상  

## 12. 향후 계획
- AI 이미지 추천·색상 자동 완성  
- NFT 마켓 연동(저작권 검토 후)  
- 기업 브랜드 캠페인용 화이트라벨 제공  
- 다중 캔버스·3D 큐브 캔버스 실험  

(총 문서 길이: 약 5,300자)
